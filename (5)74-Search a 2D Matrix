class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        # Solution 1:
        # Time: O(n)+O(log n) Space: O(n)
        # l1 = []
        
        # for l in matrix:
        #     for n in l:
        #         l1.append(n)
        
        # l,r = 0,len(l1)-1
        # while l<= r:
        #     m = l + (r-l)//2
        #     if l1[m] == target:
        #         return True
        #     elif l1[m] > target:
        #         r = m -1
        #     elif l1[m] < target:
        #         l = l+1
        # return False

        # Solution 2:
        # Time: O(log n) Space: 0
        rows, cols = len(matrix), len(matrix[0])

        top, bot = 0, rows-1
        # if too big or too small
        while top <= bot:
            row = top + (bot - top)//2
            if target > matrix[row][-1]:
                top = row + 1
            elif target < matrix[row][0]:
                bot = row - 1
            else:
                break
        
        if not (top <= bot):
            return False
        row = top + (bot - top)//2
        l,r = 0, cols-1
        while l<= r:
            m = l + (r-l) //2
            if target > matrix[row][m]:
                l = m+1
            elif target < matrix[row][m]:
                r = m-1
            else:
                return True
        return False
