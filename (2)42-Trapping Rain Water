class Solution:
    def trap(self, height: List[int]) -> int:
        l = 0
        r = len(height) - 1
        res = 0
        maxLeft = height[l]
        maxRight = height[r]

        while l < r:
            if maxLeft < maxRight:
                l += 1
                maxLeft = max(height[l], maxLeft) # Update the maximum height of the left
                res += maxLeft - height[l] # Calculate the water that can be trapped
            else:
                r -= 1
                maxRight = max(height[r], maxRight)
                res += maxRight - height[r]
        return res
